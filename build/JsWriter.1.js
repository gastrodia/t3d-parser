var fs = require('fs');
var path = require('path');
function mkdirs(dirpath, mode, callback) {
    fs.exists(dirpath, function (exists) {
        if (exists) {
            callback(dirpath);
        }
        else {
            mkdirs(path.dirname(dirpath), mode, function () {
                fs.mkdir(dirpath, mode, callback);
            });
        }
    });
}
;
var stringify = function (obj) {
    var placeholder = '____PLACEHOLDER____';
    var fns = [];
    var json = JSON.stringify(obj, function (key, value) {
        if (typeof value === 'function') {
            fns.push(value);
            return placeholder;
        }
        return value;
    }, 3);
    json = json.replace(new RegExp('"' + placeholder + '"', 'g'), function (_) {
        return fns.shift();
    });
    return json;
};
var JsWriter = (function () {
    function JsWriter(file) {
        if (file && fs.existsSync(file)) {
            var jsContent = fs.readFileSync(file, 'utf8');
            this.jsObject = this.parseLayout(jsContent);
        }
        else {
            this.jsObject = {};
        }
    }
    JsWriter.prototype.set = function (key, object) {
        this.jsObject[key] = object;
    };
    JsWriter.prototype.parseLayout = function (layoutStr) {
        var evalLayout = function () {
            var evalStr = "\n                    (function(exports){\n                        " + layoutStr + "\n                        return exports;\n                    })({});\n                ";
            return eval(evalStr);
        };
        return evalLayout();
    };
    JsWriter.prototype.toFileString = function () {
        var str = "//generated by t3d-parser\n";
        for (var key in this.jsObject) {
            str +=
                "\n\nexports." + key + " = " + stringify(this.jsObject[key]) + "\n";
        }
        return str;
    };
    JsWriter.prototype.writeToFile = function (file) {
        var _this = this;
        var dir = path.dirname(file);
        mkdirs(dir, null, function () {
            fs.writeFileSync(file, _this.toFileString(), 'utf8');
        });
    };
    return JsWriter;
}());
exports.JsWriter = JsWriter;
//# sourceMappingURL=JsWriter.1.js.map